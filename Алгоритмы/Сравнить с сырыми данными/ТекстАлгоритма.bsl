// >> 1БИТ, Скоков, 30.11.2020, Задача MDM-66
//
// Описание алгоритма:
// Алгоритм сравнения изменений по заявке с сырыми данными.
// Вызывается при выборе произвольно команды в форме заявки на изменение:
// Обработка заявок -> Сравнить с сырыми данными
//
// Настройки алгоритма:
// Наименование:			Сравнить с сырыми данными
// Область применения:		Произвольные команды
// Выполнять на клиенте:	Да
//
// Для успешной работы алгоритма, необходимо на вкладке параметры
// добавить вспомогательные алгоритмы:
// "Получить структуру сырых данных" (имя параметра ПолучитьСырыеДанные)
// "Получить структуру реквизитов" (имя параметра ПолучитьРеквизиты)
//
// Параметры передаваемые в алгоритм:
// Параметры.Форма			ФормаКлиентскогоПриложения
// Параметры.Алгоритм		СправочникСсылка.нсиАлгоритмыОбработкиДанныхЗаявок
// ОбъектОбработки			ДанныеФормыСтруктура

#Область Алгоритм_сравнения_с_сырыми_данными

ПараметрыТекущегоАлгоритма = нсиАлгоритмыОбработкиДанныхЗаявокСервер.ПолучитьПараметрыАлгоритма(Параметры.Алгоритм);
СтруктураСырыхДанных = нсиАлгоритмыОбработкиДанныхЗаявокСервер.ВыполнитьАлгоритм(
		ПараметрыТекущегоАлгоритма.ПолучитьСырыеДанные, ОбъектОбработки.Ссылка);

Если СтруктураСырыхДанных = Неопределено Тогда
	ТекстСообщения = НСтр("ru = 'Не найдены сырые данные для заявки!
			|Сравнивать можно только заявки созданные на основании сырых данных'");
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
Иначе
	СтруктураЗаявки = Параметры.Форма;
	
	ПараметрыТекущегоАлгоритма = нсиАлгоритмыОбработкиДанныхЗаявокСервер.ПолучитьПараметрыАлгоритма(Параметры.Алгоритм);
	СтруктураРеквизитов = нсиАлгоритмыОбработкиДанныхЗаявокСервер.ВыполнитьАлгоритм(
			ПараметрыТекущегоАлгоритма.ПолучитьРеквизиты, ОбъектОбработки.ВидЗаявки);
	
	РезультатСравнения = Новый Структура;
	РезультатСравнения.Вставить("ЕстьИзменения", Ложь);
	РезультатСравнения.Вставить("ЕстьИзмененияВЗаполненныхРеквизитах", Ложь);
	РезультатСравнения.Вставить("СопоставлениеРеквизитов", Новый Массив);
	
	Для Каждого ПроверяемыйРеквизит Из СтруктураРеквизитов Цикл
		ИмяРеквизита = ПроверяемыйРеквизит.Ключ;
		
		ЗначениеРеквизитаСырыхДанных = "";
		Если НЕ СтруктураСырыхДанных.Свойство(ИмяРеквизита, ЗначениеРеквизитаСырыхДанных) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеРеквизитаИзмененного = СтруктураЗаявки[ИмяРеквизита];
		
		// Приводим тип реквизита сырых данных к типу изменяемого реквизита
		Если ТипЗнч(ЗначениеРеквизитаИзмененного) = Тип("Булево") Тогда
			Если ЗначениеЗаполнено(ЗначениеРеквизитаСырыхДанных) Тогда
				ЗначениеРеквизитаСырыхДанных = XMLЗначение(Тип("Булево"), ЗначениеРеквизитаСырыхДанных);
			Иначе
				ЗначениеРеквизитаСырыхДанных = Ложь;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЗначениеРеквизитаИзмененного) = Тип("Дата") Тогда
			Если ЗначениеЗаполнено(ЗначениеРеквизитаСырыхДанных) Тогда
				ЗначениеРеквизитаСырыхДанных = XMLЗначение(Тип("Дата"), ЗначениеРеквизитаСырыхДанных);
			Иначе
				ЗначениеРеквизитаСырыхДанных = Дата(1, 1, 1);
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЗначениеРеквизитаИзмененного) = Тип("Число") Тогда
			Если ЗначениеЗаполнено(ЗначениеРеквизитаСырыхДанных) Тогда
				ЗначениеРеквизитаСырыхДанных = XMLЗначение(Тип("Число"), ЗначениеРеквизитаСырыхДанных);
			Иначе
				ЗначениеРеквизитаСырыхДанных = 0;
			КонецЕсли;
		Иначе
			ЗначениеРеквизитаСырыхДанных = СокрЛП(ЗначениеРеквизитаСырыхДанных);
		КонецЕсли;
		
		СтруктураСопоставлениеРеквизитов = Новый Структура;
		СтруктураСопоставлениеРеквизитов.Вставить("Реквизит", ИмяРеквизита);
		СтруктураСопоставлениеРеквизитов.Вставить("Синоним", ПроверяемыйРеквизит.Значение);
		СтруктураСопоставлениеРеквизитов.Вставить("Значение", ЗначениеРеквизитаСырыхДанных);
		СтруктураСопоставлениеРеквизитов.Вставить("НовоеЗначение", СокрЛП(ЗначениеРеквизитаИзмененного));
		
		РезультатСравнения.СопоставлениеРеквизитов.Добавить(СтруктураСопоставлениеРеквизитов);
		
		Если ЗначениеРеквизитаСырыхДанных = ЗначениеРеквизитаИзмененного Тогда
			Продолжить;
		КонецЕсли;
		
		РезультатСравнения.ЕстьИзменения = Истина;
		
		Если ЗначениеЗаполнено(ЗначениеРеквизитаИзмененного) Тогда
			РезультатСравнения.ЕстьИзмененияВЗаполненныхРеквизитах = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если РезультатСравнения.ЕстьИзменения Тогда
		ПараметрыФормы = Новый Структура(
				"СопоставлениеРеквизитов, РазрешитьОбновлять",
				РезультатСравнения.СопоставлениеРеквизитов, Истина);
		
		ФормаСравненияИзменений = ПолучитьФорму(
				"ОбщаяФорма.нсиФормаПодтвержденияИзмененияДанныхКонтрагентаПоЕГРЮЛ",
				ПараметрыФормы, СтруктураЗаявки);
		
		ТекстЗаголовкаФормы = НСтр("ru = 'Отличие реквизитов заявки от реквизитов оригинала:'");
		
		ФормаСравненияИзменений.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаСравненияИзменений.Элементы.Декорация1.Заголовок = ТекстЗаголовкаФормы;
		ФормаСравненияИзменений.Элементы.Да.Видимость = Ложь;
		ФормаСравненияИзменений.Открыть();
	Иначе
		ТекстСообщения = НСтр("ru = 'Нет изменившихся реквизитов!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
КонецЕсли;

#КонецОбласти
// << 1БИТ, Скоков, 30.11.2020, Задача MDM-66

