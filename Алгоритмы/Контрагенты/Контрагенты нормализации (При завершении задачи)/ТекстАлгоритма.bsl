//+++БИТ Нуртдинов 20.11.20  
//Методика нормализации справочника Контрагенты  
//Юридические лица и Физические лица (ИП)  
СписокЗначений = новый СписокЗначений;  
Если ОбъектОбработки.Свойство("Вид_контрагента") и не ОбъектОбработки.Вид_контрагента = Неопределено тогда  
	ВладелецВидыКонтрагентов = справочники.нсиВидыСправочников.НайтиПоНаименованию("Виды контрагентов", Истина);  
	СпрИП = справочники.нсиУниверсальныйКлассификатор.НайтиПоНаименованию("Индивидуальный предприниматель", Истина,, ВладелецВидыКонтрагентов);  
	СпрФизЛицо = справочники.нсиУниверсальныйКлассификатор.НайтиПоНаименованию("Физическое лицо", Истина,, ВладелецВидыКонтрагентов);  
	СпрЮрЛицо = справочники.нсиУниверсальныйКлассификатор.НайтиПоНаименованию("Юридическое лицо", Истина,, ВладелецВидыКонтрагентов);  
	если ОбъектОбработки.Вид_контрагента = СпрЮрЛицо или ОбъектОбработки.Вид_контрагента = СпрФизЛицо тогда  
		Если ОбъектОбработки.Свойство("Страна_регистрации") и не ЗначениеЗаполнено(ОбъектОбработки.Страна_регистрации) тогда  
			СписокЗначений.Добавить("Страна регистрации");     
		КонецЕсли;  
		Если ОбъектОбработки.Свойство("ИНН") и не ЗначениеЗаполнено(ОбъектОбработки.ИНН) тогда  
			//проверка на заполненность реквизита ИНН у ИП- если у контрагента в наименовании или в полном наименовании содержится "ИП" ИЛИ "Индивидуальный Предприниматель" и ИНН не заполнен, то автоматически создается задача Ответственному за нормализацию пользователю базы Подписчика по уточнению и исправлению информации.   
			если ОбъектОбработки.Вид_контрагента = СпрЮрЛицо тогда  
				СписокЗначений.Добавить("ИНН");     
			иначе  
				Если ОбъектОбработки.Свойство("Наименование") и не Найти(ОбъектОбработки.Свойство("Наименование"), "ИП") тогда  
					СписокЗначений.Добавить("ИНН");     
				конецесли;  
				Если ОбъектОбработки.Свойство("ПолноеНаименование") и не Найти(ОбъектОбработки.Свойство("ПолноеНаименование"), "ИП") тогда  
					СписокЗначений.Добавить("ИНН");     
				конецесли;  
			КонецЕсли;  
		КонецЕсли;  
		  
		Если ОбъектОбработки.Свойство("КПП") и не ЗначениеЗаполнено(ОбъектОбработки.КПП) тогда  
			Если не нсиРегламентированныеДанныеКлиентСервер.КППСоответствуетКонтрЧислу(ОбъектОбработки.КПП) тогда  
				СписокЗначений.Добавить("КПП");   	  
			Конецесли;			  
			Строка5_6 = Сред(СокрЛП(ОбъектОбработки.КПП),5,2);   
			Если Строка5_6 = "45"   
				ИЛИ Строка5_6 = "31"   
				ИЛИ Строка5_6 = "32" Тогда   
				СписокЗначений.Добавить("КПП");  
			КонецЕсли;   
		КонецЕсли;  
		//проверка на страну регистрации - если наименовании контрагента состоит из латинских символов И страна регистрации указана РОССИЯ или не заполнена , тогда создается задача Ответственному за нормализацию пользователю базы Подписчика по уточнению и исправлению информации.  
		Если ОбъектОбработки.Свойство("Страна_регистрации") и не ЗначениеЗаполнено(ОбъектОбработки.Страна_регистрации) тогда  
			СписокЗначений.Добавить("Страна_регистрации");     
		КонецЕсли;  
	конецесли;  
	  
	если СписокЗначений.Количество() > 0 тогда		  
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ПроверкаСтранаРегистрации");  
		Исполнитель = ОбъектОбработки.Подписчик.ПользователиИнформационнойБазы[0].Пользователь;  
		  
		НоваяЗадача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();  
		НоваяЗадача.БизнесПроцесс = Параметры.ЗадачаОбъект.БизнесПроцесс;  
		НоваяЗадача.ТочкаМаршрута = Параметры.ТочкаМаршрутаБизнесПроцесса;  
		НоваяЗадача.Дата = ТекущаяДата();  
		НоваяЗадача.Наименование = "Уточнение и исправление информации";  
		  
		НоваяЗадача.Исполнитель = Исполнитель;  
		НоваяЗадача.Записать();  
	Конецесли;  
Конецесли;   
//---БИТ Нуртдинов 20.11.20	 
 
ТекстСообщенияИсполнителю = "Добрый день, %Исполнитель%.     
|Сообщаем вам, что задача от %Автор% изменила статус на %СодержаниеЗадачи%, ее реквизиты: %Операция% %Номер% от %ДатаВремя%.    
|  
|С наилучшими пожеланиями,      
|Служба НСИ     
|Письмо отправлено автоматической рассылкой информационной базы 1С:МДМ.";    
 
ТекЗадача = Параметры.ЗадачаОбъект;    
Автор = ТекЗадача.Автор;    
Исполнитель = ТекЗадача.Исполнитель;    
СодержаниеЗадачи = ТекЗадача.Наименование;    
 
УстановитьПривилегированныйРежим(Истина);    
 
ПараметрыПисьма = Новый Структура;    
Если ТипЗнч(ТекЗадача.БизнесПроцесс) = Тип("БизнесПроцессСсылка.нсиЗаявкаНаИзменение") Тогда     
	ПараметрыПисьма.Вставить("Тема", "1С:НСИ Заявка на обработку");	    
ИначеЕсли ТипЗнч(ТекЗадача.БизнесПроцесс)<>Тип("БизнесПроцессСсылка.Задание") Тогда     
	ПараметрыПисьма.Вставить("Тема", "1С:НСИ Справочник """ + ТекЗадача.Бизнеспроцесс.ИмяСправочника + """: Заявка на обработку");    
Иначе    
	ПараметрыПисьма.Вставить("Тема", "1С:НСИ Задание на изменение вспомогательного справочника");    
КонецЕсли;    
 
ТелоПисьма = ТекстСообщенияИсполнителю;    
 
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Исполнитель%",Строка(Исполнитель));    
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Автор%",Строка(Автор));    
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%СодержаниеЗадачи%", СодержаниеЗадачи);    
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Операция%",?(ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации","ВОЗВРАЩЕНА НА УТОЧНЕНИЕ","ПОСТУПИЛА В ОБРАБОТКУ"));    
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Номер%",ТекЗадача.Бизнеспроцесс.Номер);    
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%ДатаВремя%",ТекЗадача.Бизнеспроцесс.Дата);    
 
ПараметрыПисьма.Вставить("ТипТекста", "Текст");    
ПараметрыПисьма.Вставить("Тело", ТелоПисьма);    
 
ПочтовыйАдресПолучателя = нсиБизнесПроцессы.ПолучитьАдресЭлектроннойПочты(Исполнитель);    
Если ПустаяСтрока(ПочтовыйАдресПолучателя) Тогда    
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
	УровеньЖурналаРегистрации.Информация,,,    
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
	НСтр("ru = 'Уведомление не отправлено, так как не указан почтовый адрес у пользователя %1.'"), Строка(ТекЗадача.Исполнитель)));    
	Перейти ~КонецАлгоритма;;    
КонецЕсли;    
ПараметрыПисьма.Вставить("Кому", ПочтовыйАдресПолучателя); 
 
Попытка     
	РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(    
	РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись(), ПараметрыПисьма);    
	 
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
	УровеньЖурналаРегистрации.Информация,,,    
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
	НСтр("ru = 'Уведомления успешно отправлены на адрес %1.'"), ПочтовыйАдресПолучателя));    
Исключение    
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
	УровеньЖурналаРегистрации.Ошибка,,,    
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
	НСтр("ru = 'Ошибка при отправке уведомления о смене статуса: %1'"),     
	ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));    
КонецПопытки;    
 
//НОРМАЛИЗАЦИЯ 
НормКонтрагенты = Справочники.нсиВидыЗаявок.НайтиПоНаименованию("Заявка на нормализацию Контрагентов"); 
НормСтатьиЗатрат = Справочники.нсиВидыЗаявок.НайтиПоНаименованию("Нормализация данных для справочника Статьи затрат"); 
НормСДДС = Справочники.нсиВидыЗаявок.НайтиПоНаименованию("Нормализация данных для справочника Статьи движения денежных средств"); 
НормПрочиеДоходы = Справочники.нсиВидыЗаявок.НайтиПоНаименованию("Нормализация данных для справочника Прочие доходы и расходы"); 
МассивВидыНормализации = Новый Массив; 
МассивВидыНормализации.Добавить(НормКонтрагенты); 
МассивВидыНормализации.Добавить(НормСтатьиЗатрат); 
МассивВидыНормализации.Добавить(НормСДДС); 
МассивВидыНормализации.Добавить(НормПрочиеДоходы); 
 
//Определяем виды заявок нормализации 
Если НЕ МассивВидыНормализации.Найти(ЗаявкаОбъект.ВидЗаявки) = Неопределено Тогда 
	//Логика отправки уведомлений 
	Если ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации" Тогда 
		//Задача на уточнение выполнена 
		Если ТекЗадача.нсиРезультат = ПредопределенноеЗначение("Перечисление.нсиРезультатыВыполненияЗадач.Выполнена") Тогда 
			ТекстСообщенияИсполнителю = "Добрый день, %Исполнитель%. 
			|Сообщаем вам, что по задаче %СодержаниеЗадачи%, ее реквизиты: %Операция% %Номер% от %ДатаВремя% получено уточнение. 
			|  
			|С наилучшими пожеланиями,      
			|Служба НСИ     
			|Письмо отправлено автоматической рассылкой информационной базы 1С:МДМ.";    
			 
			ТекЗадача = Параметры.ЗадачаОбъект;    
			Автор = ТекЗадача.Автор;    
			Исполнитель = ТекЗадача.Исполнитель;    
			СодержаниеЗадачи = ТекЗадача.Наименование;    
			 
			УстановитьПривилегированныйРежим(Истина);    
			 
			Запрос = Новый Запрос; 
			Запрос.УстановитьПараметр("БизнесПроцесс", ЗадачаОбъект.БизнесПроцесс); 
			Запрос.Текст =  
			"ВЫБРАТЬ РАЗЛИЧНЫЕ 
			|	ЗадачаИсполнителя.Исполнитель КАК Исполнитель 
			|ИЗ 
			|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя 
			|ГДЕ 
			|	ЗадачаИсполнителя.нсиОбработано 
			|	И ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс"; 
			МассивИсполнителей = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Исполнитель"); 
 
			Для Каждого Исполнитель из МассивИсполнителей Цикл 
				 
				ПараметрыПисьма = Новый Структура;    
				Если ТипЗнч(ТекЗадача.БизнесПроцесс) = Тип("БизнесПроцессСсылка.нсиЗаявкаНаИзменение") Тогда     
					ПараметрыПисьма.Вставить("Тема", "1С:НСИ Заявка на обработку");	    
				ИначеЕсли ТипЗнч(ТекЗадача.БизнесПроцесс)<>Тип("БизнесПроцессСсылка.Задание") Тогда     
					ПараметрыПисьма.Вставить("Тема", "1С:НСИ Справочник """ + ТекЗадача.Бизнеспроцесс.ИмяСправочника + """: Заявка на обработку");    
				Иначе    
					ПараметрыПисьма.Вставить("Тема", "1С:НСИ Задание на изменение вспомогательного справочника");    
				КонецЕсли;    
				 
				ТелоПисьма = ТекстСообщенияИсполнителю;    
				 
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Исполнитель%",Строка(Исполнитель));    
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Автор%",Строка(Автор));    
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%СодержаниеЗадачи%", СодержаниеЗадачи);    
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Операция%",?(ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации","ВОЗВРАЩЕНА НА УТОЧНЕНИЕ","ПОСТУПИЛА В ОБРАБОТКУ")); 
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Номер%",ТекЗадача.Бизнеспроцесс.Номер); 
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%ДатаВремя%",ТекЗадача.Бизнеспроцесс.Дата); 
				 
				ПараметрыПисьма.Вставить("ТипТекста", "Текст");    
				ПараметрыПисьма.Вставить("Тело", ТелоПисьма);    
				 
				ПочтовыйАдресПолучателя = нсиБизнесПроцессы.ПолучитьАдресЭлектроннойПочты(Исполнитель);    
				Если ПустаяСтрока(ПочтовыйАдресПолучателя) Тогда    
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
					УровеньЖурналаРегистрации.Информация,,,    
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
					НСтр("ru = 'Уведомление не отправлено, так как не указан почтовый адрес у пользователя %1.'"), Строка(ТекЗадача.Исполнитель)));    
					Продолжить; 
				КонецЕсли;    
				ПараметрыПисьма.Вставить("Кому", ПочтовыйАдресПолучателя);    
				 
				Попытка     
					РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(    
					РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись(), ПараметрыПисьма);    
					 
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
					УровеньЖурналаРегистрации.Информация,,,    
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
					НСтр("ru = 'Уведомления успешно отправлены на адрес %1.'"), ПочтовыйАдресПолучателя));    
				Исключение    
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
					УровеньЖурналаРегистрации.Ошибка,,,    
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
					НСтр("ru = 'Ошибка при отправке уведомления о смене статуса: %1'"),     
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));    
				КонецПопытки; 
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли; 
КонецЕсли; 
 
~КонецАлгоритма:  
УстановитьПривилегированныйРежим(Ложь); 
 
  

