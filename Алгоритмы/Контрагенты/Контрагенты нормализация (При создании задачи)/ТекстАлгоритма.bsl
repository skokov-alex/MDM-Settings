////+++БИТ Нуртдинов 20.11.20 
////Методика нормализации справочника Контрагенты 
////Юридические лица и Физические лица (ИП) 
//СписокЗначений = новый СписокЗначений; 
//Если ОбъектОбработки.Свойство("Вид_контрагента") и не ОбъектОбработки.Вид_контрагента = Неопределено тогда 
//	ВладелецВидыКонтрагентов = справочники.нсиВидыСправочников.НайтиПоНаименованию("Виды контрагентов", Истина); 
//	СпрИП = справочники.нсиУниверсальныйКлассификатор.НайтиПоНаименованию("Индивидуальный предприниматель", Истина,, ВладелецВидыКонтрагентов); 
//	СпрФизЛицо = справочники.нсиУниверсальныйКлассификатор.НайтиПоНаименованию("Физическое лицо", Истина,, ВладелецВидыКонтрагентов); 
//	СпрЮрЛицо = справочники.нсиУниверсальныйКлассификатор.НайтиПоНаименованию("Юридическое лицо", Истина,, ВладелецВидыКонтрагентов); 
//	если ОбъектОбработки.Вид_контрагента = СпрЮрЛицо или ОбъектОбработки.Вид_контрагента = СпрФизЛицо тогда 
//		Если ОбъектОбработки.Свойство("Страна_регистрации") и не ЗначениеЗаполнено(ОбъектОбработки.Страна_регистрации) тогда 
//			//СписокЗначений.Добавить("Страна регистрации");    
//			СписокЗначений.Добавить("Не заполнена Страна регистрации");    
//		КонецЕсли; 
//		Если ОбъектОбработки.Свойство("ИНН") и не ЗначениеЗаполнено(ОбъектОбработки.ИНН) тогда 
//			//проверка на заполненность реквизита ИНН у ИП- если у контрагента в наименовании или в полном наименовании содержится "ИП" ИЛИ "Индивидуальный Предприниматель" 
//			//и ИНН не заполнен, то автоматически создается задача Ответственному за нормализацию пользователю базы Подписчика по уточнению и исправлению информации.  
//			если ОбъектОбработки.Вид_контрагента = СпрЮрЛицо тогда 
//				СписокЗначений.Добавить("Не заполнен ИНН у вида контрагента Юридическое лицо");    
//			иначеЕсли ОбъектОбработки.Свойство("Наименование") тогда 
//				если не Найти(ОбъектОбработки.Свойство("Наименование"), "ИП") тогда 
//					СписокЗначений.Добавить("У контрагента в наименовании или в полном наименовании содержится ""ИП"" ИЛИ ""Индивидуальный Предприниматель"" и ИНН не заполнен");    
//				иначеесли  не Найти(ОбъектОбработки.Свойство("Наименование"), "Индивидуальный Предприниматель") тогда 
//					СписокЗначений.Добавить("У контрагента в наименовании или в полном наименовании содержится ""ИП"" ИЛИ ""Индивидуальный Предприниматель"" и ИНН не заполнен");    
//				конецесли;					 
//			иначеЕсли ОбъектОбработки.Свойство("ПолноеНаименование") тогда 
//				если не Найти(ОбъектОбработки.Свойство("ПолноеНаименование"), "ИП") тогда 
//					СписокЗначений.Добавить("У контрагента в наименовании или в полном наименовании содержится ""ИП"" ИЛИ ""Индивидуальный Предприниматель"" и ИНН не заполнен");    
//				иначеесли  не Найти(ОбъектОбработки.Свойство("ПолноеНаименование"), "Индивидуальный Предприниматель") тогда 
//					СписокЗначений.Добавить("У контрагента в наименовании или в полном наименовании содержится ""ИП"" ИЛИ ""Индивидуальный Предприниматель"" и ИНН не заполнен");    
//				конецесли; 
//			конецесли; 
//		КонецЕсли; 
//		 
//		Если ОбъектОбработки.Свойство("КПП") и не ЗначениеЗаполнено(ОбъектОбработки.КПП) тогда 
//			//проверка на соответствие требованиям КПП (для юридических лиц)- если КПП не проходит проверку, то автоматически создается задача Ответственному за нормализацию пользователю базы Подписчика по уточнению и исправлению информации.  
//			Если ОбъектОбработки.Вид_контрагента = СпрЮрЛицо и не нсиРегламентированныеДанныеКлиентСервер.КППСоответствуетКонтрЧислу(ОбъектОбработки.КПП) тогда 
//				СписокЗначений.Добавить("КПП не проходит проверку");   	 
//			Конецесли;	 
//			//проверка на правильность заполнения вида контрагента Юр.лицо по КПП - если значения 5 и 6 символов в КПП соответствуют значениям для Обособленного подразделения (см. п.2), то автоматически создается задача Ответственному за нормализацию пользователю базы Подписчика по уточнению и исправлению информации.  
//			Строка5_6 = Сред(СокрЛП(ОбъектОбработки.КПП),5,2);  
//			Если Строка5_6 = "45"  
//				ИЛИ Строка5_6 = "31"  
//				ИЛИ Строка5_6 = "32" Тогда  
//				СписокЗначений.Добавить("КПП соответствуют значениям для Обособленного подразделения"); 
//			КонецЕсли;  
//		КонецЕсли; 
//		//проверка на страну регистрации - если наименовании контрагента состоит из латинских символов И страна регистрации указана РОССИЯ или не заполнена , тогда создается задача Ответственному за нормализацию пользователю базы Подписчика по уточнению и исправлению информации. 
//		//Если ОбъектОбработки.Свойство("Страна_регистрации") и не ЗначениеЗаполнено(ОбъектОбработки.Страна_регистрации) тогда 
//		//	СписокЗначений.Добавить("Страна_регистрации");    
//		//КонецЕсли; 
//	конецесли; 
//	 
//	если СписокЗначений.Количество() > 0 тогда		 
//		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ПроверкаСтранаРегистрации"); 
//		//Исполнитель = ОбъектОбработки.Подписчик.ПользователиИнформационнойБазы[0].Пользователь; 
//		 
//		//НоваяЗадача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу(); 
//		//		НоваяЗадача.БизнесПроцесс = Параметры.ЗадачаОбъект.БизнесПроцесс; 
//		//		НоваяЗадача.ТочкаМаршрута = Параметры.ТочкаМаршрутаБизнесПроцесса; 
//		//		НоваяЗадача.Дата = ТекущаяДата(); 
//		//		НоваяЗадача.Наименование = "Уточнение и исправление информации"; 
//		//		 
//		//		//НоваяЗадача.Исполнитель = Исполнитель; 
//		//		НоваяЗадача.Записать(); 
//		//		отказ = истина; 
//		//		ЗаявкаОбъект = Параметры.ЗаявкаОбъект; 
//		//		ЗаявкаОбъект.НадоУточнить = истина; 
//		//		1=2; 
//		Параметры.ЗадачаОбъект.Наименование =  "Уточнение и исправление информации"; 
//		Параметры.ИзменятьДанные = истина; 
//		Параметры.ЗаявкаОбъект.НадоУточнить = истина; 
//		РезультатВыполнения = ""; 
//		для каждого Значение из СписокЗначений цикл 
//			если РезультатВыполнения = "" тогда 
//				РезультатВыполнения = Значение; 
//			иначе 
//				РезультатВыполнения = РезультатВыполнения + "; " + Значение; 
//			конецесли; 
//		конеццикла; 
//		Параметры.ЗаявкаОбъект.РезультатВыполнения = РезультатВыполнения; 
//	Конецесли; 
//Конецесли;  
////---БИТ Нуртдинов 20.11.20	 
// 
 
// >> 1БИТ, Нуртдинов, 20201212  
//Выбор исполнителя по базе подписчика и виду заявки, при уточнении информации   
ТекЗаявка = Параметры.ЗаявкаОбъект.ссылка;   
если ТекЗаявка.НадоУточнить тогда  
	Исполнитель = "";  
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("1");      
	пМетаданныеЗаявка = нсиДанныеЗаявок.ПолучитьМетаданные(ТекЗаявка.ВидЗаявки);  
	пОбъект = нсиДанныеЗаявок.ПолучитьОбъект(пМетаданныеЗаявка,ТекЗаявка);  
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("2");      
	Если пОбъект.Свойство("Подписчик") тогда  		  
		НаименованиеПользователя = "";  
		если ТекЗаявка.ВидЗаявки.наименование = "Нормализация данных для справочника Статьи затрат" тогда  
			НаименованиеПользователя = "Ответственный за нормализацию по справочнику Статьи затрат";  
		иначеесли ТекЗаявка.ВидЗаявки.наименование = "Нормализация данных для справочника Статьи движения денежных средств" тогда  
			НаименованиеПользователя = "Ответственный за нормализацию по справочнику Статьи движения денежных средств";  
		иначеесли ТекЗаявка.ВидЗаявки.наименование = "Нормализация данных для справочника Прочие доходы и расходы" тогда  
			НаименованиеПользователя = "Ответственный за нормализацию по справочнику Прочие доходы и расходы";  
		иначеесли ТекЗаявка.ВидЗаявки.наименование = "Заявка на нормализацию Контрагентов" тогда  
			НаименованиеПользователя = "Ответственный за нормализацию по справочнику Контрагенты";  
		конецесли;    		  
		Запрос = Новый Запрос;  
		Запрос.Текст =   
		"ВЫБРАТЬ  
		|	БИТ_ПодписчикиПользователиИнформационнойБазы.Пользователь КАК Пользователь  
		|ИЗ  
		|	Справочник.БИТ_Подписчики.ПользователиИнформационнойБазы КАК БИТ_ПодписчикиПользователиИнформационнойБазы  
		|ГДЕ  
		|	БИТ_ПодписчикиПользователиИнформационнойБазы.Пользователь.Наименование = &Наименование  
		|	И БИТ_ПодписчикиПользователиИнформационнойБазы.Ссылка = &Ссылка";  
		  
		Запрос.УстановитьПараметр("Ссылка", пОбъект.Подписчик);	  
		Запрос.УстановитьПараметр("Наименование", НаименованиеПользователя);  
		  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Исполнитель);      
		  
		РезультатЗапроса = Запрос.Выполнить();  
		  
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();  
		  
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
			Исполнитель = ВыборкаДетальныеЗаписи.пользователь;  
		КонецЦикла;		  
	конецесли;  
	если не Исполнитель = "" тогда  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Исполнитель);      
		Параметры.ЗадачаОбъект.Исполнитель = Исполнитель;  
		Параметры.изменятьДанные = истина;  
	иначе  
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден ответсвенный за уточнение информации в базе: " + пОбъект.Подписчик );      
	Конецесли;	  
конецесли;       
// << 1БИТ, Нуртдинов, 20201212    
 
//ОТПРАВКА УВЕДОМЛЕНИЯ АВТОРУ 
ТекЗадача = Параметры.ЗадачаОбъект;    
Автор = ТекЗадача.Автор;    
Исполнитель = ТекЗадача.Исполнитель;    
СодержаниеЗадачи = ТекЗадача.Наименование;    
 
ТекстСообщенияАвтору =     
"Добрый день, %Автор%.    
|Спасибо за ваш запрос.    
|Сообщаем вам, что по вашему запросу зарегистрирована задача на %СодержаниеЗадачи%, ее реквизиты: %Операция% %Номер% от %ДатаВремя%.    
|   
|С наилучшими пожеланиями,     
|Служба НСИ    
|Письмо отправлено автоматической рассылкой информационной базы 1С:МДМ.";    
 
УстановитьПривилегированныйРежим(Истина);    
 
ПараметрыПисьма = Новый Структура;    
Если ТипЗнч(ТекЗадача.БизнесПроцесс) = Тип("БизнесПроцессСсылка.нсиЗаявкаНаИзменение") Тогда     
	ПараметрыПисьма.Вставить("Тема", "1С:НСИ Поступление заявки на обработку");      
ИначеЕсли ТипЗнч(ТекЗадача.БизнесПроцесс)<>Тип("БизнесПроцессСсылка.Задание") Тогда     
	ПараметрыПисьма.Вставить("Тема", "1С:НСИ Справочник """ + ТекЗадача.Бизнеспроцесс.ИмяСправочника + """: поступление заявки на обработку");    
Иначе    
	ПараметрыПисьма.Вставить("Тема", "1С:НСИ Задание на изменение вспомогательного справочника");    
КонецЕсли; 
 
ТелоПисьма = ТекстСообщенияАвтору; 
 
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Автор%",Строка(Автор));    
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%СодержаниеЗадачи%", СодержаниеЗадачи);      
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Операция%",?(ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации","ВОЗВРАЩЕНА НА УТОЧНЕНИЕ","ПОСТУПИЛА В ОБРАБОТКУ"));    
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Номер%",ТекЗадача.Бизнеспроцесс.Номер);    
ТелоПисьма = СтрЗаменить(ТелоПисьма,"%ДатаВремя%",ТекЗадача.Бизнеспроцесс.Дата);    
 
ПараметрыПисьма.Вставить("ТипТекста", "Текст");    
ПараметрыПисьма.Вставить("Тело", ТелоПисьма);    
 
ПочтовыйАдресПолучателя = нсиБизнесПроцессы.ПолучитьАдресЭлектроннойПочты(Автор);    
Если ПустаяСтрока(ПочтовыйАдресПолучателя) Тогда    
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
	УровеньЖурналаРегистрации.Информация,,,    
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
	НСтр("ru = 'Уведомление не отправлено, так как не указан почтовый адрес у пользователя %1.'"), Строка(ТекЗадача.Исполнитель)));    
	Перейти ~КонецАлгоритма;   
КонецЕсли;    
ПараметрыПисьма.Вставить("Кому", ПочтовыйАдресПолучателя);    
 
Попытка     
	РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(    
	РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись(), ПараметрыПисьма); 
	 
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
	УровеньЖурналаРегистрации.Информация,,,    
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
	НСтр("ru = 'Уведомления успешно отправлены на адрес %1.'"), ПочтовыйАдресПолучателя));    
Исключение    
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
	УровеньЖурналаРегистрации.Ошибка,,, 
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку( 
	НСтр("ru = 'Ошибка при отправке уведомления о новых задачах: %1'"),     
	ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));    
КонецПопытки;    
 
 
//ОТЛАДКА+ Условие на вид заявки - обычная или нормализация 
//НОРМАЛИЗАЦИЯ 
НормКонтрагенты = Справочники.нсиВидыЗаявок.НайтиПоНаименованию("Заявка на нормализацию Контрагентов"); 
НормСтатьиЗатрат = Справочники.нсиВидыЗаявок.НайтиПоНаименованию("Нормализация данных для справочника Статьи затрат"); 
НормСДДС = Справочники.нсиВидыЗаявок.НайтиПоНаименованию("Нормализация данных для справочника Статьи движения денежных средств"); 
НормПрочиеДоходы = Справочники.нсиВидыЗаявок.НайтиПоНаименованию("Нормализация данных для справочника Прочие доходы и расходы"); 
МассивВидыНормализации = Новый Массив; 
МассивВидыНормализации.Добавить(НормКонтрагенты); 
МассивВидыНормализации.Добавить(НормСтатьиЗатрат); 
МассивВидыНормализации.Добавить(НормСДДС); 
МассивВидыНормализации.Добавить(НормПрочиеДоходы); 
 
//Определяем виды заявок нормализации 
Если МассивВидыНормализации.Найти(Параметры.ЗаявкаОбъект.ВидЗаявки) = Неопределено Тогда 
	//ОТПРАВКА УВЕДОМЛЕНИЯ ИСПОЛНИТЕЛЯМ ОБЫЧНАЯ ЗАЯВКА 
	ТекЗадача = Параметры.ЗадачаОбъект;    
	Автор = ТекЗадача.Автор;    
	Исполнитель = ТекЗадача.Исполнитель;    
	СодержаниеЗадачи = ТекЗадача.Наименование;    
	 
	ТекстСообщенияИсполнителю =     
	"Добрый день, %Исполнитель%.     
	|Сообщаем вам, что зарегистрирована задача от %Автор% на %СодержаниеЗадачи%, ее реквизиты: %Операция% %Номер% от %ДатаВремя%.    
	|   
	|С наилучшими пожеланиями,      
	|Служба НСИ     
	|Письмо отправлено автоматической рассылкой информационной базы 1С:МДМ.";   
	 
	Если НЕ ЗначениеЗаполнено(Исполнитель) Тогда   
		 
		МассивИсполнителей = нсиБизнесПроцессы.ПолучитьДопустимыхИсполнителей (ТекЗадача);     
		 
		Для каждого Исполнитель из МассивИсполнителей Цикл   
			ПараметрыПисьма = Новый Структура; 
			ТелоПисьма = ТекстСообщенияИсполнителю;    
			 
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Исполнитель%",Строка(Исполнитель));    
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Автор%",Строка(Автор));    
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%СодержаниеЗадачи%", СодержаниеЗадачи);    
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Операция%",?(ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации","ВОЗВРАЩЕНА НА УТОЧНЕНИЕ","ПОСТУПИЛА В ОБРАБОТКУ"));    
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Номер%",ТекЗадача.Бизнеспроцесс.Номер);    
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%ДатаВремя%",ТекЗадача.Бизнеспроцесс.Дата);    
			 
			ПараметрыПисьма.Вставить("ТипТекста", "Текст");    
			ПараметрыПисьма.Вставить("Тело", ТелоПисьма);    
			 
			ПочтовыйАдресПолучателя = нсиБизнесПроцессы.ПолучитьАдресЭлектроннойПочты(Исполнитель);    
			Если ПустаяСтрока(ПочтовыйАдресПолучателя) Тогда    
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
				УровеньЖурналаРегистрации.Информация,,,    
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
				НСтр("ru = 'Уведомление не отправлено, так как не указан почтовый адрес у пользователя %1.'"), Строка(ТекЗадача.Исполнитель)));    
				Продолжить; 
			КонецЕсли;    
			ПараметрыПисьма.Вставить("Кому", ПочтовыйАдресПолучателя);    
			 
			Попытка     
				РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(    
				РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись(), ПараметрыПисьма);    
				 
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
				УровеньЖурналаРегистрации.Информация,,,    
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
				НСтр("ru = 'Уведомления успешно отправлены на адрес %1.'"), ПочтовыйАдресПолучателя));    
			Исключение    
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
				УровеньЖурналаРегистрации.Ошибка,,,    
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
				НСтр("ru = 'Ошибка при отправке уведомления о новых задачах: %1'"),     
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));    
			КонецПопытки;    
		КонецЦикла;   
		 
	Иначе   
		ПараметрыПисьма = Новый Структура;    
		Если ТипЗнч(ТекЗадача.БизнесПроцесс) = Тип("БизнесПроцессСсылка.нсиЗаявкаНаИзменение") Тогда     
			ПараметрыПисьма.Вставить("Тема", "1С:НСИ Поступление заявки на обработку");      
		ИначеЕсли ТипЗнч(ТекЗадача.БизнесПроцесс)<>Тип("БизнесПроцессСсылка.Задание") Тогда     
			ПараметрыПисьма.Вставить("Тема", "1С:НСИ Справочник """ + ТекЗадача.Бизнеспроцесс.ИмяСправочника + """: поступление заявки на обработку");    
		Иначе   
			ПараметрыПисьма.Вставить("Тема", "1С:НСИ Задание на изменение вспомогательного справочника");    
		КонецЕсли;    
		 
		ТелоПисьма = ТекстСообщенияИсполнителю;    
		ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Исполнитель%",Строка(Исполнитель));    
		ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Автор%",Строка(Автор));    
		ТелоПисьма = СтрЗаменить(ТелоПисьма,"%СодержаниеЗадачи%", СодержаниеЗадачи);    
		ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Операция%",?(ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации","ВОЗВРАЩЕНА НА УТОЧНЕНИЕ","ПОСТУПИЛА В ОБРАБОТКУ"));    
		ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Номер%",ТекЗадача.Бизнеспроцесс.Номер);    
		ТелоПисьма = СтрЗаменить(ТелоПисьма,"%ДатаВремя%",ТекЗадача.Бизнеспроцесс.Дата);    
		 
		ПараметрыПисьма.Вставить("ТипТекста", "Текст");    
		ПараметрыПисьма.Вставить("Тело", ТелоПисьма);    
		 
		ПочтовыйАдресПолучателя = нсиБизнесПроцессы.ПолучитьАдресЭлектроннойПочты(Исполнитель);    
		Если ПустаяСтрока(ПочтовыйАдресПолучателя) Тогда    
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
			УровеньЖурналаРегистрации.Информация,,,    
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
			НСтр("ru = 'Уведомление не отправлено, так как не указан почтовый адрес у пользователя %1.'"), Строка(ТекЗадача.Исполнитель)));    
			Перейти ~КонецАлгоритма;   
		КонецЕсли;    
		ПараметрыПисьма.Вставить("Кому", ПочтовыйАдресПолучателя);    
		 
		Попытка     
			РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(    
			РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись(), ПараметрыПисьма);    
			 
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
			УровеньЖурналаРегистрации.Информация,,,    
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
			НСтр("ru = 'Уведомления успешно отправлены на адрес %1.'"), ПочтовыйАдресПолучателя));    
		Исключение    
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о новой задаче'"),     
			УровеньЖурналаРегистрации.Ошибка,,,    
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
			НСтр("ru = 'Ошибка при отправке уведомления о новых задачах: %1'"),     
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));    
		КонецПопытки;    
	КонецЕсли;   
Иначе  
	//ОТПРАВКА УВЕДОМЛЕНИЯ ИСПОЛНИТЕЛЯМ ЗАЯВКА ПО НОРМАЛИЗАЦИИ 
	Если ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации" Тогда 
		ТекЗадача = Параметры.ЗадачаОбъект;    
		Автор = ТекЗадача.Автор;    
		Исполнитель = ТекЗадача.Исполнитель;    
		СодержаниеЗадачи = ТекЗадача.Наименование;    
		 
		ТекстСообщенияИсполнителю = "Добрый день, %Исполнитель%. 
		|Сообщаем вам, что создана задача на уточнение по нормализации данных %СодержаниеЗадачи%, ее реквизиты: %Операция% %Номер% от %ДатаВремя%. 
		|  
		|С наилучшими пожеланиями,      
		|Служба НСИ     
		|Письмо отправлено автоматической рассылкой информационной базы 1С:МДМ.";    
		 
		УстановитьПривилегированныйРежим(Истина);    
		Если НЕ ЗначениеЗаполнено(Исполнитель) Тогда   
			//ЗАДАЧА ЕЩЕ НЕ НАЗНАЧЕНА 
			 
			МассивИсполнителей = нсиБизнесПроцессы.ПолучитьДопустимыхИсполнителей(ТекЗадача);     
			 
			Для каждого Исполнитель из МассивИсполнителей Цикл   
				ПараметрыПисьма = Новый Структура; 
				Если ТипЗнч(ТекЗадача.БизнесПроцесс) = Тип("БизнесПроцессСсылка.нсиЗаявкаНаИзменение") Тогда     
					ПараметрыПисьма.Вставить("Тема", "1С:НСИ Заявка на обработку");	    
				ИначеЕсли ТипЗнч(ТекЗадача.БизнесПроцесс)<>Тип("БизнесПроцессСсылка.Задание") Тогда     
					ПараметрыПисьма.Вставить("Тема", "1С:НСИ Справочник """ + ТекЗадача.Бизнеспроцесс.ИмяСправочника + """: Заявка на обработку");    
				Иначе    
					ПараметрыПисьма.Вставить("Тема", "1С:НСИ Задание на изменение вспомогательного справочника");    
				КонецЕсли;    
				 
				ТелоПисьма = ТекстСообщенияИсполнителю;    
				 
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Исполнитель%",Строка(Исполнитель));    
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Автор%",Строка(Автор));    
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%СодержаниеЗадачи%", СодержаниеЗадачи);    
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Операция%",?(ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации","ВОЗВРАЩЕНА НА УТОЧНЕНИЕ","ПОСТУПИЛА В ОБРАБОТКУ")); 
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Номер%",ТекЗадача.Бизнеспроцесс.Номер); 
				ТелоПисьма = СтрЗаменить(ТелоПисьма,"%ДатаВремя%",ТекЗадача.Бизнеспроцесс.Дата); 
				 
				ПараметрыПисьма.Вставить("ТипТекста", "Текст");    
				ПараметрыПисьма.Вставить("Тело", ТелоПисьма);    
				 
				ПочтовыйАдресПолучателя = нсиБизнесПроцессы.ПолучитьАдресЭлектроннойПочты(Исполнитель);    
				Если ПустаяСтрока(ПочтовыйАдресПолучателя) Тогда    
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
					УровеньЖурналаРегистрации.Информация,,,    
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
					НСтр("ru = 'Уведомление не отправлено, так как не указан почтовый адрес у пользователя %1.'"), Строка(ТекЗадача.Исполнитель)));    
					Продолжить;    
				КонецЕсли;    
				ПараметрыПисьма.Вставить("Кому", ПочтовыйАдресПолучателя);    
				 
				Попытка     
					РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(    
					РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись(), ПараметрыПисьма);    
					 
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
					УровеньЖурналаРегистрации.Информация,,,    
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
					НСтр("ru = 'Уведомления успешно отправлены на адрес %1.'"), ПочтовыйАдресПолучателя));    
				Исключение    
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
					УровеньЖурналаРегистрации.Ошибка,,,    
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
					НСтр("ru = 'Ошибка при отправке уведомления о смене статуса: %1'"),     
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));    
				КонецПопытки; 
			КонецЦикла 
		Иначе 
			//ЗАДАЧА НАЗНАЧЕНА 
			ПараметрыПисьма = Новый Структура; 
			Если ТипЗнч(ТекЗадача.БизнесПроцесс) = Тип("БизнесПроцессСсылка.нсиЗаявкаНаИзменение") Тогда     
				ПараметрыПисьма.Вставить("Тема", "1С:НСИ Заявка на обработку");	    
			ИначеЕсли ТипЗнч(ТекЗадача.БизнесПроцесс)<>Тип("БизнесПроцессСсылка.Задание") Тогда     
				ПараметрыПисьма.Вставить("Тема", "1С:НСИ Справочник """ + ТекЗадача.Бизнеспроцесс.ИмяСправочника + """: Заявка на обработку");    
			Иначе    
				ПараметрыПисьма.Вставить("Тема", "1С:НСИ Задание на изменение вспомогательного справочника");    
			КонецЕсли;    
			 
			ТелоПисьма = ТекстСообщенияИсполнителю;    
			 
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Исполнитель%",Строка(Исполнитель));    
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Автор%",Строка(Автор));    
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%СодержаниеЗадачи%", СодержаниеЗадачи);    
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Операция%",?(ТекЗадача.ТочкаМаршрута.НаименованиеЗадачи = "Уточнение информации","ВОЗВРАЩЕНА НА УТОЧНЕНИЕ","ПОСТУПИЛА В ОБРАБОТКУ")); 
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%Номер%",ТекЗадача.Бизнеспроцесс.Номер); 
			ТелоПисьма = СтрЗаменить(ТелоПисьма,"%ДатаВремя%",ТекЗадача.Бизнеспроцесс.Дата); 
			 
			ПараметрыПисьма.Вставить("ТипТекста", "Текст");    
			ПараметрыПисьма.Вставить("Тело", ТелоПисьма);    
			 
			ПочтовыйАдресПолучателя = нсиБизнесПроцессы.ПолучитьАдресЭлектроннойПочты(Исполнитель);    
			Если ПустаяСтрока(ПочтовыйАдресПолучателя) Тогда    
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
				УровеньЖурналаРегистрации.Информация,,,    
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
				НСтр("ru = 'Уведомление не отправлено, так как не указан почтовый адрес у пользователя %1.'"), Строка(ТекЗадача.Исполнитель)));    
				Перейти ~КонецАлгоритма;;    
			КонецЕсли;    
			ПараметрыПисьма.Вставить("Кому", ПочтовыйАдресПолучателя);    
			 
			Попытка     
				РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(    
				РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись(), ПараметрыПисьма);    
				 
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
				УровеньЖурналаРегистрации.Информация,,,    
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
				НСтр("ru = 'Уведомления успешно отправлены на адрес %1.'"), ПочтовыйАдресПолучателя));    
			Исключение    
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Бизнес-процессы и задачи. Уведомление о смене статуса задачи'"),     
				УровеньЖурналаРегистрации.Ошибка,,,    
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
				НСтр("ru = 'Ошибка при отправке уведомления о смене статуса: %1'"),     
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));    
			КонецПопытки; 
		КонецЕсли; 
	КонецЕсли; 
КонецЕсли; 
 
~КонецАлгоритма: 
УстановитьПривилегированныйРежим(Ложь); 

