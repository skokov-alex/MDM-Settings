//БИТ.AKU.10.12.2020 ->  
Если НЕ ЗначениеЗаполнено(Параметры.Объект.Вид_Контрагента) Тогда     
	ОбъектОбработки = ПараметрыАлгоритма.ЮрЛицо;      
КонецЕсли;     
//<-   
  
//БИТ.AKU.05.02.2021 ->   
Параметры.Объект.Заполнено_по_ЕГРЮЛ_ЕГРИП = Ложь;     
	  
Заявка = ?(ТипЗнч(Параметры.Форма.Объект.Ссылка)=Тип("ЗадачаСсылка.ЗадачаИсполнителя"),Параметры.Форма.Задание,Параметры.Форма.Объект);         
   
РеквизитИД = Параметры.Форма.пМетаданные.Реквизиты.Заполнено_по_ЕГРЮЛ_ЕГРИП.Идентификатор;       
СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(новый Структура("РеквизитИД", РеквизитИД));       
Если СтрокаОбогащения.Количество() = 0 Тогда        
	СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();       
	СтрокаОбогащения.РеквизитИД = РеквизитИД;       
Иначе       
	СтрокаОбогащения = СтрокаОбогащения[0];       
КонецЕсли;       
СтрокаОбогащения.Обогащать = Истина;       
//<-   
 
//БИТ.AKU.08.02.2021 18:25:45 -> 
Если ОбъектОбработки = ПараметрыАлгоритма.ЮрЛицо Тогда // Переключение на Юр.Лицо 
	Параметры.Объект.ИсторияКПП.Очистить(); 
	Параметры.Объект.ИсторияНаименований.Очистить(); 
	Параметры.Объект.ИсторияКонтактнойИнформации.Очистить(); 
 
	ВидЗаявкиТЧ = Параметры.Форма.пМетаданные.ТабличныеЧасти.ИсторияКПП.ВидЗаявки;    
	СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("ВидЗаявки", ВидЗаявкиТЧ));    
	Если СтрокаОбогащения.Количество() = 0 Тогда    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
		СтрокаОбогащения.ВидЗаявки = ВидЗаявкиТЧ;    
	Иначе    
		СтрокаОбогащения = СтрокаОбогащения[0];    
	КонецЕсли;    
	СтрокаОбогащения.Обогащать = Истина;    
 
	ВидЗаявкиТЧ = Параметры.Форма.пМетаданные.ТабличныеЧасти.ИсторияНаименований.ВидЗаявки;    
	СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("ВидЗаявки", ВидЗаявкиТЧ));    
	Если СтрокаОбогащения.Количество() = 0 Тогда    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
		СтрокаОбогащения.ВидЗаявки = ВидЗаявкиТЧ;    
	Иначе    
		СтрокаОбогащения = СтрокаОбогащения[0];    
	КонецЕсли;    
	СтрокаОбогащения.Обогащать = Истина;    
 
	ВидЗаявкиТЧ = Параметры.Форма.пМетаданные.ТабличныеЧасти.ИсторияКонтактнойИнформации.ВидЗаявки;    
	СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("ВидЗаявки", ВидЗаявкиТЧ));    
	Если СтрокаОбогащения.Количество() = 0 Тогда    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
		СтрокаОбогащения.ВидЗаявки = ВидЗаявкиТЧ;    
	Иначе    
		СтрокаОбогащения = СтрокаОбогащения[0];    
	КонецЕсли;    
	СтрокаОбогащения.Обогащать = Истина;    
КонецЕсли;	 
//<- 
 
Параметры.ИзменятьДанные = Истина;     
Параметры.ОбновлятьОтображение = Истина;   
   

