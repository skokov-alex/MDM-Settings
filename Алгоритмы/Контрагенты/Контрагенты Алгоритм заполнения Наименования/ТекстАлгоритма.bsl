// БИТ.AKU.11.12.2020 ->    
// Параметры передаваемые в алгоритм:    
// 		ОбъектОбработки.Объект - Структура формы объекта    
// 		ОбъектОбработки.ИзменятьДанные - Булево - признак изменения данных    
// 		ОбъектОбработки.Форма - ФормаКлиентскогоПриложения    
// 		ОбъектОбработки.ЗаявкаОбъект - БизнесПроцессОбъект.нсиЗаявкаНаИзменение - объект бизнес-процесса    
    
Если НЕ ОбъектОбработки.Отказ  
	И ОбъектОбработки.Форма.Вид_контрагента <> ПараметрыАлгоритма.Предприниматель       	    
	И ОбъектОбработки.Форма.Вид_контрагента <> ПараметрыАлгоритма.ФизЛицо 	  
	И ОбъектОбработки.Форма.Страна_Регистрации = Справочники.СтраныМира.Россия Тогда   
  
	Объект = ОбъектОбработки.Объект;    
	Форма = ОбъектОбработки.Форма;    
	Если Форма.ИмяФормы = "БизнесПроцесс.нсиЗаявкаНаИзменение.Форма.ФормаБизнесПроцесса"    
		ИЛИ Форма.ИмяФормы = "БизнесПроцесс.нсиЗаявкаНаИзменение.Форма.РаботаСЗаявками"    
		ИЛИ Форма.ИмяФормы = "БизнесПроцесс.нсиЗаявкаНаИзменение.Форма.ФормаДанныеЗаявки"    
		ИЛИ Форма.ИмяФормы = "Обработка.нсиШаблонФормЗаявки.ФормаБизнесПроцесса" Тогда	    
		Заявка = Форма.Объект;   
	Иначе   
		Заявка = Форма.Задание;   
	КонецЕсли;   
	ВидКонтрагента = Объект.Вид_контрагента;    
		      
	ЭтоЮЛ = БИТ_АлгоритмыСервер.ЭтоЮрЛицо(ВидКонтрагента);    
	ПараметрыФормирования = Новый Структура;      
	ПараметрыФормирования.Вставить("ИНН", Объект.ИНН);      
	ПараметрыФормирования.Вставить("ЭтоЮЛ", ЭтоЮЛ);      
			      
	АдресХранилища = БИТ_АлгоритмыСервер.ДанныеКонтрагентаПоИНН(ПараметрыФормирования, Новый УникальныйИдентификатор()); // нсиПолучениеДанныхПоИНН      
	Если АдресХранилища <> неопределено Тогда      
		РеквизитыКонтрагента = ПолучитьИзВременногоХранилища(АдресХранилища);      
		Если РеквизитыКонтрагента <> Неопределено Тогда        
			Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда        
				      
				Если ПустаяСтрока(РеквизитыКонтрагента.ОписаниеОшибки) Тогда        
					ТекстПредупреждения = НСтр("ru='При получении данных ЕГРЮЛ\ЕГРИП произошла неизвестная ошибка.'");        
				ИначеЕсли РеквизитыКонтрагента.ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда        
					ТекстПредупреждения = НСтр("ru='Не указаны параметры аутентификации сервиса получения данных по ИНН.'");        
				ИначеЕсли РеквизитыКонтрагента.ОписаниеОшибки = "НеУказанПароль" Тогда        
					ТекстПредупреждения = НСтр("ru='Не указан пароль для доступа к сервису получения данных по ИНН'");        
				ИначеЕсли СтрЧислоВхождений(ВРЕГ(РеквизитыКонтрагента.ОписаниеОшибки),"НЕ УДАЛОСЬ НАЙТИ ДАННЫЕ ДЛЯ ЗАПОЛНЕНИЯ РЕКВИЗИТОВ") > 0 Тогда        
					ТекстПредупреждения = НСтр("ru = 'Выполнен запрос к базе ЕГРЮЛ\ЕГРИП.'") + " " + РеквизитыКонтрагента.ОписаниеОшибки;        
				Иначе        
					ТекстПредупреждения = РеквизитыКонтрагента.ОписаниеОшибки;        
				КонецЕсли;        
				      
				Сообщить(ТекстПредупреждения);         
			Иначе    
				// Наименование       
				Если РеквизитыКонтрагента.Свойство("Наименование") Тогда    
					Если ВидКонтрагента = ПараметрыАлгоритма.Подразделение Тогда      
						Если ЗначениеЗаполнено(Объект.Головной_контрагент) Тогда      
							Наименование = Объект.Головной_контрагент.Наименование +     
								" ОСП " + РеквизитыКонтрагента.НаименованиеСокращенное;     
						Иначе	     
							Наименование = "ОСП " + РеквизитыКонтрагента.НаименованиеСокращенное;     
						КонецЕсли;      
					ИначеЕсли ВидКонтрагента = ПараметрыАлгоритма.Филиал Тогда      
						Если ЗначениеЗаполнено(Объект.Головной_контрагент) Тогда      
							Наименование = Объект.Головной_контрагент.Наименование +     
							" Филиал " + РеквизитыКонтрагента.НаименованиеСокращенное;         
						Иначе	     
							Наименование = "Филиал " + РеквизитыКонтрагента.НаименованиеСокращенное;         
						КонецЕсли;      
		//				ИначеЕсли ВидКонтрагента = ПараметрыАлгоритма.Предприниматель Тогда      
		//					Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(      
		//					НСтр("ru='%1 %2 %3'"),       
		//					РеквизитыКонтрагента.Фамилия,      
		//					РеквизитыКонтрагента.Имя,      
		//					РеквизитыКонтрагента.Отчество);      
					Иначе       
						Наименование = РеквизитыКонтрагента.НаименованиеСокращенное;      
						Поз = СтрНайти(Наименование, """");      
						Если Поз > 0 И Поз <= 10 Тогда      
							Наименование = СокрП(Сред(Наименование, Поз)) + " " + СокрП(Лев(Наименование, Поз-1));      
							Наименование = СтрЗаменить(Наименование, """", "");      
						КонецЕсли;      
						Наименование = СокрЛП(Наименование);      
					КонецЕсли;      
					Если Объект.Наименование <> Наименование Тогда   
						Объект.Наименование = Наименование;   
						ОбъектОбработки.ИзменятьДанные = Истина;    
						Сообщить("Наименование контрагента было изменено на наименование из ЕГРЮЛ");      
					КонецЕсли;	   
					    
					// Обогащение    
					РеквизитИД = Форма.пМетаданные.Реквизиты.Наименование.Идентификатор;       
					СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(новый Структура("РеквизитИД", РеквизитИД));       
					Если СтрокаОбогащения.Количество() = 0 Тогда        
						СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();       
						СтрокаОбогащения.РеквизитИД = РеквизитИД;       
					Иначе       
						СтрокаОбогащения = СтрокаОбогащения[0];       
					КонецЕсли;       
					СтрокаОбогащения.Обогащать = Истина;     
				КонецЕсли;   
					   
				// Полное наименование   
				Если РеквизитыКонтрагента.Свойство("НаименованиеСокращенное") Тогда   
	//				И НЕ (ВидКонтрагента = ПараметрыАлгоритма.Подразделение   
	//				ИЛИ ВидКонтрагента = ПараметрыАлгоритма.Филиал) Тогда        
					Если Объект.ПолноеНаименование <> РеквизитыКонтрагента.НаименованиеСокращенное Тогда      
						Объект.ПолноеНаименование = РеквизитыКонтрагента.НаименованиеСокращенное;   
						ОбъектОбработки.ИзменятьДанные = Истина;    
					КонецЕсли;      
					    
					// Обогащение    
					РеквизитИД = Форма.пМетаданные.Реквизиты.ПолноеНаименование.Идентификатор;       
					СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(новый Структура("РеквизитИД", РеквизитИД));       
					Если СтрокаОбогащения.Количество() = 0 Тогда        
						СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();       
						СтрокаОбогащения.РеквизитИД = РеквизитИД;       
					Иначе       
						СтрокаОбогащения = СтрокаОбогащения[0];       
					КонецЕсли;       
					СтрокаОбогащения.Обогащать = Истина;     
				КонецЕсли;      
				   
				// Наименование по ЕГРЮЛ    
				Если РеквизитыКонтрагента.Свойство("НаименованиеПолное") Тогда   
	//				И ВидКонтрагента = ПараметрыАлгоритма.ЮрЛицо Тогда        
					Если Объект.Полное_наименование_ЕГРЮЛ <> РеквизитыКонтрагента.НаименованиеПолное Тогда      
						Объект.Полное_наименование_ЕГРЮЛ = РеквизитыКонтрагента.НаименованиеПолное;   
						ОбъектОбработки.ИзменятьДанные = Истина;    
					КонецЕсли;      
						    
					// Обогащение    
					РеквизитИД = Форма.пМетаданные.Реквизиты.Полное_наименование_ЕГРЮЛ.Идентификатор;       
					СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(новый Структура("РеквизитИД", РеквизитИД));       
					Если СтрокаОбогащения.Количество() = 0 Тогда        
						СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();       
						СтрокаОбогащения.РеквизитИД = РеквизитИД;       
					Иначе       
						СтрокаОбогащения = СтрокаОбогащения[0];       
					КонецЕсли;       
					СтрокаОбогащения.Обогащать = Истина;     
				КонецЕсли;      
			КонецЕсли;		    
		КонецЕсли;		    
	КонецЕсли;		    
КонецЕсли;	  
  
// <-    

