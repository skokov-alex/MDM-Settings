//БИТ.AKU.28.11.2020    
Если Параметры.Результат = КодВозвратаДиалога.Да Тогда    
	Объект = Параметры.Форма;    
	РеквизитыКонтрагента = Параметры.РеквизитыКонтрагента;    
	Заявка = Параметры.Заявка;    
	ПараметрыТекущегоАлгоритма = нсиАлгоритмыОбработкиДанныхЗаявокСервер.ПолучитьПараметрыАлгоритма(Параметры.Алгоритм);    
	    
	ЭтоЮЛ = Ложь;    
	ЭтоГО = Ложь;    
	ЭтоИП = Ложь;    
	ЭтоОП = Ложь;    
	ЭтоФилиал = Ложь;    
  
	Строка5_6 = Сред(СокрЛП(Объект.КПП),5,2);       
	Если РеквизитыКонтрагента.ПроизошлаЗамена Тогда    
		ВидКонтрагента = Строка(РеквизитыКонтрагента.НовыйВидКонтрагента);    
	//БИТ.AKU.22.01.2021  ->  
	// Изменение вида контрагента на юр. лицо с ОП или Филиала, если подходящий КПП  
	ИначеЕсли (Объект.Вид_контрагента = ПараметрыТекущегоАлгоритма.Подразделение  
		ИЛИ Объект.Вид_контрагента = ПараметрыТекущегоАлгоритма.Филиал)  
		И Строка5_6 <> "43"       
		И Строка5_6 <> "02"       
		И Строка5_6 <> "03"  
		И Строка5_6 <> "45"       
		И Строка5_6 <> "31"       
		И Строка5_6 <> "32" Тогда       
		ВидКонтрагента = ПараметрыТекущегоАлгоритма.ЮрЛицо;   
		РеквизитыКонтрагента.ПроизошлаЗамена = Истина;    
		РеквизитыКонтрагента.НовыйВидКонтрагента = ПараметрыТекущегоАлгоритма.ЮрЛицо;    
	//<-	  
	Иначе    
		ВидКонтрагента = Строка(Объект.Вид_контрагента);    
	КонецЕсли;    
	    
	Если ВидКонтрагента = "Государственный орган" Тогда    
		ЭтоЮЛ = Истина;    
		ЭтоГО = Истина;    
	ИначеЕсли ВидКонтрагента = "Юридическое лицо" Тогда    
		ЭтоЮЛ = Истина;    
	ИначеЕсли ВидКонтрагента = "Индивидуальный предприниматель" Тогда    
		ЭтоИП = Истина;    
	ИначеЕсли ВидКонтрагента = "Обособленное подразделение" Тогда    
		ЭтоЮЛ = Истина;    
		ЭтоОП = Истина;    
	ИначеЕсли ВидКонтрагента = "Филиал" Тогда    
		ЭтоЮЛ = Истина;    
		ЭтоФилиал = Истина;    
	КонецЕсли;    
	    
	Если ЭтоИП Тогда    
		Объект.КПП = "";    
		    
		РеквизитИД = Объект.пМетаданные.Реквизиты.КПП.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
	    
	ИначеЕсли РеквизитыКонтрагента.Свойство("КПП")  
		И Объект.КПП <> РеквизитыКонтрагента.КПП Тогда    
		Объект.КПП = РеквизитыКонтрагента.КПП;    
		    
		РеквизитИД = Объект.пМетаданные.Реквизиты.КПП.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
	КонецЕсли;    
	    
	// Изменим вид контрагента, если был корректный ИНН, но не корректный вид контрагента    
	Если РеквизитыКонтрагента.ПроизошлаЗамена  
		И Объект.Вид_Контрагента <> РеквизитыКонтрагента.НовыйВидКонтрагента Тогда    
		Объект.Вид_Контрагента = РеквизитыКонтрагента.НовыйВидКонтрагента;    
		    
		РеквизитИД = Объект.пМетаданные.Реквизиты.Вид_Контрагента.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
		  
		// Физическое лицо  
		Если Объект.Вид_Контрагента = ПараметрыТекущегоАлгоритма.Предприниматель Тогда  
			Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.нсиЮрФизЛицо.ФизЛицо");  
		Иначе  
			Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.нсиЮрФизЛицо.ЮрЛицо");  
		КонецЕсли;  
		  
		РеквизитИД = Объект.пМетаданные.Реквизиты.ЮрФизЛицо.Идентификатор;     
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(новый Структура("РеквизитИД", РеквизитИД));     
		Если СтрокаОбогащения.Количество() = 0 Тогда      
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();     
			СтрокаОбогащения.РеквизитИД = РеквизитИД;     
		Иначе     
			СтрокаОбогащения = СтрокаОбогащения[0];     
		КонецЕсли;     
		СтрокаОбогащения.Обогащать = Истина;     
	      
	    // Обособленное подразделение - флаг  
		Если Объект.Вид_Контрагента = ПараметрыТекущегоАлгоритма.Подразделение  
			ИЛИ Объект.Вид_Контрагента = ПараметрыТекущегоАлгоритма.Филиал Тогда  
			Объект.Обособленное_подразделение = Истина;  
		Иначе	  
			Объект.Обособленное_подразделение = Ложь;  
		КонецЕсли;  
		  
		РеквизитИД = Объект.пМетаданные.Реквизиты.Обособленное_подразделение.Идентификатор;     
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(новый Структура("РеквизитИД", РеквизитИД));     
		Если СтрокаОбогащения.Количество() = 0 Тогда      
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();     
			СтрокаОбогащения.РеквизитИД = РеквизитИД;     
		Иначе     
			СтрокаОбогащения = СтрокаОбогащения[0];     
		КонецЕсли;     
		СтрокаОбогащения.Обогащать = Истина;     
  
	КонецЕсли;    
	    
	Если РеквизитыКонтрагента.Свойство("РегистрационныйНомер")   
		И Объект.ОГРН <> РеквизитыКонтрагента.РегистрационныйНомер Тогда    
		Объект.ОГРН = РеквизитыКонтрагента.РегистрационныйНомер;    
		    
		РеквизитИД = Объект.пМетаданные.Реквизиты.ОГРН.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
	КонецЕсли;    
	    
	Если РеквизитыКонтрагента.Свойство("ДатаРегистрации")  
		И Объект.ДатаРегистрации <> РеквизитыКонтрагента.ДатаРегистрации Тогда    
		Объект.ДатаРегистрации = РеквизитыКонтрагента.ДатаРегистрации;    
		    
		РеквизитИД = Объект.пМетаданные.Реквизиты.ДатаРегистрации.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
	КонецЕсли;    
	    
	// Изменяем дату и номер свидетельства о регистрации    
	ВыполнитьОбогащениеСвидетельствоСерияНомер = Ложь;    
	ВыполнитьОбогащениеСвидетельствоДатаВыдачи = Ложь;    
	    
	СвидетельствоОРегистрации = Неопределено;    
	Если ЭтоИП    
		И РеквизитыКонтрагента.Свойство("СвидетельствоОРегистрации", СвидетельствоОРегистрации)    
		И НЕ СвидетельствоОРегистрации = Неопределено Тогда    
		    
		СвидетельствоСерияНомер = СокрЛП(СвидетельствоОРегистрации.Серия) + " " + СокрЛП(СвидетельствоОРегистрации.Номер);    
		Если Объект.СвидетельствоСерияНомер <> СвидетельствоСерияНомер Тогда    
			Объект.СвидетельствоСерияНомер = СвидетельствоСерияНомер;    
			ВыполнитьОбогащениеСвидетельствоСерияНомер = Истина;    
		КонецЕсли;    
		    
		СвидетельствоДатаВыдачи = СвидетельствоОРегистрации.Дата;    
		Если Объект.СвидетельствоДатаВыдачи <> СвидетельствоДатаВыдачи Тогда    
			Объект.СвидетельствоДатаВыдачи = СвидетельствоДатаВыдачи;    
			ВыполнитьОбогащениеСвидетельствоДатаВыдачи = Истина;    
		КонецЕсли;    
	Иначе    
		Если НЕ ПустаяСтрока(Объект.СвидетельствоСерияНомер) Тогда    
			Объект.СвидетельствоСерияНомер = "";    
			ВыполнитьОбогащениеСвидетельствоСерияНомер = Истина;    
		КонецЕсли;    
		    
		Если Объект.СвидетельствоДатаВыдачи <> Дата(1, 1, 1) Тогда    
			Объект.СвидетельствоДатаВыдачи = Дата(1, 1, 1);    
			ВыполнитьОбогащениеСвидетельствоДатаВыдачи = Истина;    
		КонецЕсли;    
	КонецЕсли;    
	    
	Если ВыполнитьОбогащениеСвидетельствоСерияНомер Тогда    
		РеквизитИД = Объект.пМетаданные.Реквизиты.СвидетельствоСерияНомер.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
	КонецЕсли;    
	    
	Если ВыполнитьОбогащениеСвидетельствоДатаВыдачи Тогда    
		РеквизитИД = Объект.пМетаданные.Реквизиты.СвидетельствоДатаВыдачи.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
	КонецЕсли;    
	    
	// Изменим наименование контрагента    
	Если РеквизитыКонтрагента.Свойство("Наименование") Тогда    
		ОбъектНаименование = "";  
		Если ЭтоОП Тогда    
			Если Объект.Головной_контрагент <> Неопределено Тогда    
				ОбъектНаименование = нсиОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Головной_контрагент, "Наименование");    
			КонецЕсли;    
			ОбъектНаименование = ОбъектНаименование + " ОСП " + РеквизитыКонтрагента.НаименованиеСокращенное;    
		ИначеЕсли ЭтоФилиал Тогда    
			Если Объект.Головной_контрагент <> Неопределено Тогда    
				ОбъектНаименование = нсиОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Головной_контрагент, "Наименование");    
			КонецЕсли;    
			ОбъектНаименование = ОбъектНаименование + " Филиал " + РеквизитыКонтрагента.НаименованиеСокращенное;    
		ИначеЕсли ЭтоИП Тогда    
			ОбъектНаименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(    
					НСтр("ru='%1 %2 %3'"),    
					РеквизитыКонтрагента.Фамилия,    
					РеквизитыКонтрагента.Имя,    
					РеквизитыКонтрагента.Отчество);    
		Иначе    
			ОбъектНаименование = РеквизитыКонтрагента.НаименованиеСокращенное;    
			Поз = СтрНайти(ОбъектНаименование, """");    
			Если Поз > 0 И Поз <= 10 Тогда    
				ОбъектНаименование = СокрП(Сред(ОбъектНаименование, Поз)) + " " + СокрП(Лев(ОбъектНаименование, Поз - 1));    
				ОбъектНаименование = СтрЗаменить(ОбъектНаименование, """", "");    
			КонецЕсли;    
			ОбъектНаименование = СокрЛП(ОбъектНаименование);    
		КонецЕсли;    
		  
		Если СокрЛП(Объект.Наименование) <> СокрЛП(ОбъектНаименование) Тогда  
			Объект.Наименование = ОбъектНаименование;  
			    
			// >> 1БИТ, Скоков, 04.12.2020, Задача MDM-54    
			// Обновим наименование заявки/задачи    
			ЗаявкаОбъект = Объект.Объект;    
			МассивНаименования = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(    
					ЗаявкаОбъект.Наименование, ". ");    
			    
			КоличествоЧастейНаименования = 3;    
			    
			Если МассивНаименования.Количество() = КоличествоЧастейНаименования Тогда    
				МассивНаименования[2] = Объект.Наименование;    
				НовоеНаименование = СтрСоединить(МассивНаименования, ". ");    
				ЗаявкаОбъект.Наименование = НовоеНаименование;    
			КонецЕсли;    
			// << 1БИТ, Скоков, 04.12.2020, Задача MDM-54    
			    
			РеквизитИД = Объект.пМетаданные.Реквизиты.Наименование.Идентификатор;    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
			Если СтрокаОбогащения.Количество() = 0 Тогда    
				СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
				СтрокаОбогащения.РеквизитИД = РеквизитИД;    
			Иначе    
				СтрокаОбогащения = СтрокаОбогащения[0];    
			КонецЕсли;    
			СтрокаОбогащения.Обогащать = Истина;    
		КонецЕсли;    
		    
	КонецЕсли;    
	    
	Если РеквизитыКонтрагента.Свойство("НаименованиеСокращенное")    
		И СокрЛП(Объект.ПолноеНаименование) <> СокрЛП(РеквизитыКонтрагента.НаименованиеСокращенное)  
		И НЕ (ЭтоОП ИЛИ ЭтоФилиал) Тогда    
		Объект.ПолноеНаименование = РеквизитыКонтрагента.НаименованиеСокращенное;    
		    
		РеквизитИД = Объект.пМетаданные.Реквизиты.ПолноеНаименование.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
	КонецЕсли;    
	    
	Если РеквизитыКонтрагента.Свойство("НаименованиеПолное")    
		И СокрЛП(Объект.Полное_наименование_ЕГРЮЛ) <> СокрЛП(РеквизитыКонтрагента.НаименованиеПолное)  
		И ЭтоЮЛ И НЕ (ЭтоОП ИЛИ ЭтоФилиал) Тогда    
		Объект.Полное_наименование_ЕГРЮЛ = РеквизитыКонтрагента.НаименованиеПолное;    
		    
		РеквизитИД = Объект.пМетаданные.Реквизиты.Полное_наименование_ЕГРЮЛ.Идентификатор;    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
		Если СтрокаОбогащения.Количество() = 0 Тогда    
			СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
			СтрокаОбогащения.РеквизитИД = РеквизитИД;    
		Иначе    
			СтрокаОбогащения = СтрокаОбогащения[0];    
		КонецЕсли;    
		СтрокаОбогащения.Обогащать = Истина;    
	КонецЕсли;    
	    
	Если РеквизитыКонтрагента.Свойство("ЮридическийАдрес")    
		И РеквизитыКонтрагента.ЮридическийАдрес <> Неопределено    
		И НЕ (ЭтоИП ИЛИ ЭтоОП ИЛИ ЭтоФилиал) Тогда    
		Отбор = Новый Структура("Вид", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента"));    
		ДанныеСтроки = Объект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);    
		Для Индекс = 0 По ДанныеСтроки.Количество() - 1 Цикл    
			Если ЗначениеЗаполнено(ДанныеСтроки[Индекс].ИмяРеквизита)  
				И ДанныеСтроки[Индекс].Значение <> РеквизитыКонтрагента.ЮридическийАдрес.КонтактнаяИнформация Тогда  
				ДанныеСтроки[Индекс].Представление = РеквизитыКонтрагента.ЮридическийАдрес.Представление;    
				ДанныеСтроки[Индекс].Значение = РеквизитыКонтрагента.ЮридическийАдрес.КонтактнаяИнформация;    
				Объект[ДанныеСтроки[Индекс].ИмяРеквизита] = РеквизитыКонтрагента.ЮридическийАдрес.Представление;    
				    
				ВидЗаявкиТЧ = Объект.пМетаданные.ТабличныеЧасти.КонтактнаяИнформация.ВидЗаявки;    
				СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("ВидЗаявки", ВидЗаявкиТЧ));    
				Если СтрокаОбогащения.Количество() = 0 Тогда    
					СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
					СтрокаОбогащения.ВидЗаявки = ВидЗаявкиТЧ;    
				Иначе    
					СтрокаОбогащения = СтрокаОбогащения[0];    
				КонецЕсли;    
				СтрокаОбогащения.Обогащать = Истина;    
				  
				Параметры.Форма.ОформитьРеквизитыОбогащенияКонтактнойИнформации(Истина);    
			КонецЕсли;    
		КонецЦикла;    
		    
	КонецЕсли;    
	    
	// Признак Заполнено по ЕГРЮЛ/ЕГРИП    
	Объект.Заполнено_по_ЕГРЮЛ_ЕГРИП = Истина;    
	    
	РеквизитИД = Объект.пМетаданные.Реквизиты.Заполнено_по_ЕГРЮЛ_ЕГРИП.Идентификатор;    
	СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.НайтиСтроки(Новый Структура("РеквизитИД", РеквизитИД));    
	Если СтрокаОбогащения.Количество() = 0 Тогда    
		СтрокаОбогащения = Заявка.НастройкиОбновленияДанных.Добавить();    
		СтрокаОбогащения.РеквизитИД = РеквизитИД;    
	Иначе    
		СтрокаОбогащения = СтрокаОбогащения[0];    
	КонецЕсли;    
	СтрокаОбогащения.Обогащать = Истина;    
	    
	Если РеквизитыКонтрагента.Свойство("ИсторияРеквизитов")     
		И РеквизитыКонтрагента.ИсторияРеквизитов.Свойство("Наименование") Тогда    
    
		Объект.ИсторияНаименований.Очистить();    
		Для Каждого Строка Из РеквизитыКонтрагента.ИсторияРеквизитов.Наименование Цикл    
			НС = Объект.ИсторияНаименований.Добавить();    
			НС.Код = Прав("    " + Объект.ИсторияНаименований.Количество(), 4);    
			НС.Дата = Строка.Дата;    
			НС.Наименование = Строка.НаименованиеСокращенное;    
			НС.ПолноеНаименование = Строка.НаименованиеПолное;    
		КонецЦикла;    
	КонецЕсли;    
	    
	Если РеквизитыКонтрагента.Свойство("ИсторияРеквизитов")     
		И РеквизитыКонтрагента.ИсторияРеквизитов.Свойство("КПП") Тогда    
    
		Объект.ИсторияКПП.Очистить();    
		Для Каждого Строка Из РеквизитыКонтрагента.ИсторияРеквизитов.КПП Цикл    
			НС = Объект.ИсторияКПП.Добавить();    
			НС.Код = Прав("    " + Объект.ИсторияКПП.Количество(), 4);    
			НС.Дата = Строка.Дата;    
			НС.КПП = Строка.Значение;    
			ЗаполнитьЗначенияСвойств(НС, Строка);    
		КонецЦикла;    
	КонецЕсли;    
	    
	Если РеквизитыКонтрагента.Свойство("ИсторияРеквизитов") И     
		РеквизитыКонтрагента.ИсторияРеквизитов.Свойство("Адрес") Тогда    
    
		Объект.ИсторияКонтактнойИнформации.Очистить();    
		Для Каждого Строка Из РеквизитыКонтрагента.ИсторияРеквизитов.Адрес Цикл    
			НС = Объект.ИсторияКонтактнойИнформации.Добавить();    
			НС.Код = Прав("    " + Объект.ИсторияКонтактнойИнформации.Количество(), 4);    
			НС.Дата = Строка.Дата;    
			НС.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента");    
			НС.Представление = Строка.Представление;    
			НС.Значение = Строка.КонтактнаяИнформация;    
		КонецЦикла;    
	КонецЕсли;    
	    
	ИННПравильный = Истина;    
	    
	БИТ_АлгоритмыКлиентСервер.УстановитьТекстПроверкиДляИННКПП(    
		Объект, Объект.Элементы.ИНН, Объект.Элементы.КПП, ИННПравильный, ВидКонтрагента);    
	    
	Параметры.Форма.Модифицированность = Истина;    
	Параметры.Форма.ОФормитьРеквизитыОбогащения();    
	    
КонецЕсли;    
    
Параметры.Результат = Строка(Параметры.Результат);    

